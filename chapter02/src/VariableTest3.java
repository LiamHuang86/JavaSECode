/*
測試基本數據類型變量間的運算規則。

1.這裡提到可以做運算的基本數據類型有7種，不包含布林類型。

2.運算規則包括:
	(1)自動類型提升
	(2)強制類型轉換

3.此VariableTest3.java用來測試自動類型提升

規則: 當容量小的變量與容量大的變量做運算時，結果自動轉換為容量大的數據類型。

	byte 、 short 、 char ---> int ---> long ---> float ---> double

	特別的: byte、short、char類型的變量之間做運算，結果為int類型。

說明: 此時的容量小或大，並非指占用的內存空間的大小，而是指表示數據的範圍的大小。
	long(8位元組)、float(4位元組)，但float表數範圍比long大。
.
*/

class VariableTest3 
{
	public static void main(String[] args) 
	{
		int i1 = 10;
		int i2 = i1;

		long l1 = i1;

		float f1 = l1;

		byte b1 = 12;
		int i3 = b1 + i1;  //byte ---> int，編譯通過
		/*編譯不通過
		byte b2 = b1 + i1;

		******************************************************
		特殊的情況1: byte、short之間做運算
		*/
		byte b3 = 12;
		short s1 = 10;
		//編譯不通過
		//short s2 = b3 + s1;

		int i4 = b3 + s1;

		/*編譯不通過
		byte b4 = 10;
		byte b5 = b3 + b4;

		結論:byte、short類型的變量之間做運算，結果為int類型。

		*******************************************************
		特殊情況2: char
		*/
		char c1 = 'a';
		//編譯不通過
		//char c2 = c1 + b3;
		int i5 = c1 + b3;

		//*****************************************************
		//練習1:
		long l2 = 123L;
		long l3 = 123; //理解為: 自動類型提升 (int ---> long   O)

		//long l4 = 123123123123;  //123123123123理解為int類型，因為超出了int類型的範圍，所以報錯。 
		long l4 = 123123123123L;   //此時的123123123123L就是使用8個位元組存儲的long類型的值。

		//練習2:
		float f2 = 12.3F;
		//float f3 = 12.3;    //沒有後綴默認為double，為大轉小情況，不滿足小轉大的自動提升規則，所以報錯。
		//(double ---> float   X)

		//練習3:
		//規定1----整型常量規定為int類型。
		byte b5 = 10;
		//byte b6 = b5 +1;
		int ii1 = b5 +1;

		//規定2----浮點型常量，規定是double類型。
		double dd1 = b5 + 12.3;

		/*練習4: 說明為什麼不允許變量名是數字。
		int 123L = 12;   //此處123L為變量名。
		long l6 = 123L;  //此處又為數值，導致混淆、矛盾。
		*/
	}
}
