/*
你的理解是正確的。
實際上，當 Java bytecode 被 Java 虛擬機（JVM）執行時，
有兩種方法可以將 bytecode 轉換成機器碼：解釋和即時編譯 (Just-In-Time, JIT)。

(1)"解釋"：在這種方式中，當 JVM 運行時，解釋器會逐行讀取 bytecode 並且將其轉換成機器碼來執行。
這種方式比較慢，因為每次運行都需要重新逐行轉換。

(2)"JIT 編譯"：在這種方式中，JVM 會將使用頻繁的 bytecode 預先編譯成機器碼並存儲下來，
之後需要執行的時候就不需要重新轉換，直接執行對應的機器碼。這種方式可以顯著提升效率。

因此，將 Java 語言描述為半編譯半解釋語言，其實是考慮到了 Java 的這兩種執行模式。
初次編譯將源碼轉為 bytecode 的過程屬於編譯，而在 JVM 執行時，既可能採用解釋的方式，
也可能採用 JIT 編譯的方式，這兩種方式共同構成了 Java 的半編譯半解釋的特性。
*/